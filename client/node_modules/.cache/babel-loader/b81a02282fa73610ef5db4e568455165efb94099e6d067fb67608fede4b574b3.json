{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sofian\\\\Desktop\\\\To-Do(REDUX)\\\\client\\\\src\\\\Components\\\\Edit\\\\Edit.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Modal, ModalBody } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editTask, getTask } from '../../JS/Actions/task';\nimport { useMatch, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Edit = () => {\n  _s();\n  const [show, setShow] = useState(false);\n  const [newTask, setNewTask] = useState({\n    task: \"\"\n  });\n  const dispatch = useDispatch();\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const oneTask = useSelector(state => state.taskReducer.oneTask);\n  const match = useMatch(\"/:id\");\n  const handleChange = e => {\n    setNewTask({\n      ...newTask,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleEdit = () => {\n    dispatch(editTask(task._id, ...newTask));\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"info\",\n      onClick: handleShow,\n      children: \"EDIT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Change the Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newTask.task,\n          placeholder: `${oneTaskask.task}`,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleChange,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Edit, \"k5VdDJ+yyHAUxS+MQLKYSHjz0a8=\", false, function () {\n  return [useDispatch, useSelector, useMatch];\n});\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useEffect","useState","Button","Modal","ModalBody","useDispatch","useSelector","editTask","getTask","useMatch","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","Edit","_s","show","setShow","newTask","setNewTask","task","dispatch","handleClose","handleShow","oneTask","state","taskReducer","match","handleChange","e","target","name","value","handleEdit","_id","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onHide","Header","closeButton","Title","placeholder","oneTaskask","onChange","Footer","_c","$RefreshReg$"],"sources":["C:/Users/sofian/Desktop/To-Do(REDUX)/client/src/Components/Edit/Edit.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, Modal, ModalBody } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { editTask, getTask } from '../../JS/Actions/task';\r\nimport { useMatch, useParams } from 'react-router-dom';\r\n\r\nconst Edit = () => {\r\n    const [show, setShow] = useState(false);\r\n    const [newTask, setNewTask] = useState({task: \"\"});\r\n    const dispatch = useDispatch()\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const oneTask = useSelector((state) => state.taskReducer.oneTask);\r\n    const match  = useMatch(\"/:id\")\r\n\r\n\r\n    const handleChange = (e) => {\r\n        setNewTask({...newTask, [e.target.name]: e.target.value});\r\n      };\r\n\r\n\r\n\r\n      const handleEdit = () => {\r\n        dispatch(editTask(task._id, ...newTask));\r\n        ;\r\n      };\r\n\r\n  return (\r\n    <>\r\n    <Button variant='info' onClick={handleShow}>\r\n        EDIT\r\n    </Button>\r\n    <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Change the Task</Modal.Title>\r\n        </Modal.Header>\r\n        <ModalBody>\r\n            <input value={newTask.task} \r\n            placeholder={`${oneTaskask.task}`}\r\n            onChange={handleChange}/>\r\n        </ModalBody>\r\n        <Modal.Footer>\r\n            <Button variant='secondary' onClick={handleClose}>Close</Button>\r\n            <Button variant='primary'  onClick={handleChange}\r\n>Save Changes</Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n    </>\r\n\r\n  );\r\n  }\r\n\r\nexport default Edit"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}