{"ast":null,"code":"// importation\n\nimport { FAIL_TASK, LOAD_TASK, ONE_TASK, SUCC_TASK, DONE_TASK } from \"../ActionsTypes/task\";\n\n// initialState\nconst initialState = {\n  toggle: false,\n  allTasks: [],\n  errors: null,\n  load: false,\n  oneTask: {}\n};\n\n// pure function\n\nconst taskReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case LOAD_TASK:\n      return {\n        ...state,\n        load: true\n      };\n    case SUCC_TASK:\n      return {\n        ...state,\n        load: false,\n        allTasks: payload.allTasks,\n        isDO\n      };\n    case FAIL_TASK:\n      return {\n        ...state,\n        load: false,\n        errors: payload\n      };\n    case ONE_TASK:\n      return {\n        ...state,\n        load: false,\n        oneTask: payload.oneTask\n      };\n    default:\n      return state;\n    case DONE_TASK:\n      return {\n        ...state,\n        load: false,\n        allTasks: state.allTasks.map(el => el._id === payload ? {\n          ...el,\n          isDone: !el.isDone\n        } : el)\n      };\n  }\n};\nexport default taskReducer;","map":{"version":3,"names":["FAIL_TASK","LOAD_TASK","ONE_TASK","SUCC_TASK","DONE_TASK","initialState","toggle","allTasks","errors","load","oneTask","taskReducer","state","type","payload","isDO","map","el","_id","isDone"],"sources":["C:/Users/sofian/Desktop/To-Do(REDUX)/client/src/JS/Reducers/task.js"],"sourcesContent":["// importation\r\n\r\nimport {\r\n  FAIL_TASK,\r\n  LOAD_TASK,\r\n  ONE_TASK,\r\n  SUCC_TASK,\r\n  DONE_TASK,\r\n} from \"../ActionsTypes/task\";\r\n\r\n// initialState\r\nconst initialState = {\r\n  toggle: false,\r\n  allTasks: [],\r\n  errors: null,\r\n  load: false,\r\n  oneTask: {},\r\n};\r\n\r\n// pure function\r\n\r\nconst taskReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case LOAD_TASK:\r\n      return { ...state, load: true };\r\n    case SUCC_TASK:\r\n      return { ...state, load: false, allTasks: payload.allTasks, isDO };\r\n    case FAIL_TASK:\r\n      return { ...state, load: false, errors: payload };\r\n    case ONE_TASK:\r\n      return { ...state, load: false, oneTask: payload.oneTask };\r\n    default:\r\n      return state;\r\n    case DONE_TASK:\r\n      return {\r\n        ...state,\r\n        load: false,\r\n        allTasks: state.allTasks.map((el) =>\r\n          el._id === payload ? { ...el, isDone: !el.isDone } : el\r\n        ),\r\n      };\r\n  }\r\n};\r\n\r\nexport default taskReducer;\r\n"],"mappings":"AAAA;;AAEA,SACEA,SAAS,EACTC,SAAS,EACTC,QAAQ,EACRC,SAAS,EACTC,SAAS,QACJ,sBAAsB;;AAE7B;AACA,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,KAAK;EACbC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE,IAAI;EACZC,IAAI,EAAE,KAAK;EACXC,OAAO,EAAE,CAAC;AACZ,CAAC;;AAED;;AAEA,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGP,YAAY,EAAE;EAAEQ,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAC/D,QAAQD,IAAI;IACV,KAAKZ,SAAS;MACZ,OAAO;QAAE,GAAGW,KAAK;QAAEH,IAAI,EAAE;MAAK,CAAC;IACjC,KAAKN,SAAS;MACZ,OAAO;QAAE,GAAGS,KAAK;QAAEH,IAAI,EAAE,KAAK;QAAEF,QAAQ,EAAEO,OAAO,CAACP,QAAQ;QAAEQ;MAAK,CAAC;IACpE,KAAKf,SAAS;MACZ,OAAO;QAAE,GAAGY,KAAK;QAAEH,IAAI,EAAE,KAAK;QAAED,MAAM,EAAEM;MAAQ,CAAC;IACnD,KAAKZ,QAAQ;MACX,OAAO;QAAE,GAAGU,KAAK;QAAEH,IAAI,EAAE,KAAK;QAAEC,OAAO,EAAEI,OAAO,CAACJ;MAAQ,CAAC;IAC5D;MACE,OAAOE,KAAK;IACd,KAAKR,SAAS;MACZ,OAAO;QACL,GAAGQ,KAAK;QACRH,IAAI,EAAE,KAAK;QACXF,QAAQ,EAAEK,KAAK,CAACL,QAAQ,CAACS,GAAG,CAAEC,EAAE,IAC9BA,EAAE,CAACC,GAAG,KAAKJ,OAAO,GAAG;UAAE,GAAGG,EAAE;UAAEE,MAAM,EAAE,CAACF,EAAE,CAACE;QAAO,CAAC,GAAGF,EACvD;MACF,CAAC;EACL;AACF,CAAC;AAED,eAAeN,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}