{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sofian\\\\Desktop\\\\To-Do(REDUX)\\\\client\\\\src\\\\Components\\\\NavBar.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavImage from '../Components/NavImage.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NavBar = () => {\n  _s();\n  const user = useSelector(state => state.userReducer.user);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"dark\",\n      variant: \"dark\",\n      className: \"shark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: NavImage,\n          alt: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"/\",\n          children: \"To-DO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"me-auto\",\n          children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), user && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"/tasks\",\n              children: \"my tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"/\",\n              onClick: () => dispatch(logout()),\n              children: \"logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 13\n            }, this), \"&nbps;&nbps;&nbps;&nbps;&nbps;&nbps;&nbps;&nbps;&nbps;&nbps;&nbps;\", /*#__PURE__*/_jsxDEV(Nav.Link, {\n              className: \"welcome\",\n              children: [\"Welcome \", user && user.firstname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true), !user && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"/register\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(NavBar, \"xXvxOehHJpw/X5Imivu/2I1+3NA=\", true);\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","Container","Nav","Navbar","NavImage","jsxDEV","_jsxDEV","Fragment","_Fragment","NavBar","_s","user","useSelector","state","userReducer","dispatch","useDispatch","children","bg","variant","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Brand","href","Link","onClick","logout","firstname","_c","$RefreshReg$"],"sources":["C:/Users/sofian/Desktop/To-Do(REDUX)/client/src/Components/NavBar.js"],"sourcesContent":["import React from \"react\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport NavImage from '../Components/NavImage.png';\r\n\r\nconst NavBar = () => {\r\n  const user = useSelector((state)=> state.userReducer.user);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n        <Navbar bg=\"dark\" variant=\"dark\" className=\"shark\">\r\n        <Container>\r\n          <img src={NavImage} alt='icon'/>\r\n          <Navbar.Brand href=\"/\">To-DO</Navbar.Brand>\r\n          \r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link href=\"/\">Home</Nav.Link>\r\n            {user && (\r\n              <>\r\n              \r\n            <Nav.Link href=\"/tasks\">my tasks</Nav.Link>\r\n            <Nav.Link href=\"/\" onClick={() => dispatch(logout())}>logout</Nav.Link>\r\n            &nbps;&nbps;&nbps;&nbps;&nbps;&nbps;&nbps;&nbps;&nbps;&nbps;&nbps;\r\n            <Nav.Link className='welcome'>Welcome {user && user.firstname}</Nav.Link>\r\n            </>\r\n            )}\r\n            {!user && (\r\n              <>\r\n              <Nav.Link href=\"/login\">Login</Nav.Link>\r\n              <Nav.Link href=\"/register\">Register</Nav.Link>\r\n              </>\r\n            )}\r\n            \r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n      </div>\r\n      \r\n    \r\n  );\r\n  }\r\n\r\nexport default NavBar"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}